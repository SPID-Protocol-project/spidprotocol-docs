"use strict";(self.webpackChunkspidprotocol_docs=self.webpackChunkspidprotocol_docs||[]).push([[816],{8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var o=t(6540);const s={},i=o.createContext(s);function r(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(i.Provider,{value:n},e.children)}},9777:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"spec","title":"SPID Protocol Specification","description":"The technical foundation of the SPID Protocol \u2014 including resolution, registry structure, and compliance requirements.","source":"@site/i18n/fr/docusaurus-plugin-content-docs/current/spec.md","sourceDirName":".","slug":"/spec","permalink":"/spidprotocol-docs/fr/docs/spec","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"ChatSites\u2122","lastUpdatedAt":1748479207000,"sidebarPosition":5,"frontMatter":{"id":"spec","title":"SPID Protocol Specification","description":"The technical foundation of the SPID Protocol \u2014 including resolution, registry structure, and compliance requirements.","sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"PulseID","permalink":"/spidprotocol-docs/fr/docs/pulseid"},"next":{"title":"Use Cases","permalink":"/spidprotocol-docs/fr/docs/use-cases"}}');var s=t(4848),i=t(8453);const r={id:"spec",title:"SPID Protocol Specification",description:"The technical foundation of the SPID Protocol \u2014 including resolution, registry structure, and compliance requirements.",sidebar_position:5},a="\u2699\ufe0f SPID Protocol Specification",c={},d=[{value:"\ud83d\udd04 1. Resolution Overview",id:"-1-resolution-overview",level:2},{value:"Input:",id:"input",level:3}];function l(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"\ufe0f-spid-protocol-specification",children:"\u2699\ufe0f SPID Protocol Specification"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.strong,{children:"SPID Protocol"})," defines a structured, open standard for publishing, discovering, and interacting with ",(0,s.jsx)(n.strong,{children:"Smart Packets"})," via unique identifiers (PulseIDs)."]}),"\n",(0,s.jsxs)(n.p,{children:["This spec outlines how systems ",(0,s.jsx)(n.strong,{children:"store"}),", ",(0,s.jsx)(n.strong,{children:"resolve"}),", and ",(0,s.jsx)(n.strong,{children:"route"})," Smart Packets using the SPID identity and registry system."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-1-resolution-overview",children:"\ud83d\udd04 1. Resolution Overview"}),"\n",(0,s.jsxs)(n.p,{children:["Smart Packets are resolved by querying a SPID-compatible resolver using a ",(0,s.jsx)(n.strong,{children:"PulseID"})," or ",(0,s.jsx)(n.strong,{children:"intent tag"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"input",children:"Input:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "query": "spid:creator:elena-podcast"\n}\n\nOutput:\n{\n  "packets": [\n    {\n      "id": "spid:creator:elena-podcast:intro",\n      "voice": "...",\n      "transcript": "...",\n      "intent": "intro/show",\n      "cta": [ ... ],\n      "meta": { ... }\n    }\n  ]\n}\n\nThe SPID Resolver MUST support:\nExact ID resolution (e.g. spid:brand:xyz-support)\n\n\nIntent-based filtering (e.g. support/faq)\n\n\nTag- or metadata-based fallback\n\n\n\n\ud83e\udde0 2. Identity Registry\nEach PulseID maps to a JSON record that includes:\n{\n  "id": "spid:brand:acme",\n  "displayName": "Acme Corp",\n  "inboxUrl": "https://api.acme.com/inbox",\n  "packetsUrl": "https://cdn.acme.com/spid/packets.json",\n  "metadata": {\n    "verified": true,\n    "created": "2025-05-28",\n    "tags": ["insurance", "mortgage", "quote"]\n  }\n}\n\nThis allows systems to:\nFetch all published Smart Packets for a given identity\n\n\nRoute new voice messages to inboxes or bots\n\n\nDetermine if the source is verified\n\n\n\n\ud83d\udd10 3. Trust & Security\nSPID-compliant systems SHOULD:\nSign packets with a verifiable token or public key\n\n\nVerify authorship before displaying packets to users\n\n\nRespect expiration metadata (expires field)\n\n\nOptional:\nUse DNS-based TXT records to validate ownership of spid:domain:* IDs\n\n\nInclude HTTPS-based signatures for secure handoff between agents\n\n\n\n\ud83e\udde0 4. Intent Structure\nIntent strings follow a predictable path-based format:\n[category]/[action] or [topic]/[context]\n\nExamples:\ninsurance/quote\n\n\nonboarding/welcome\n\n\nproduct/demo\n\n\nAI systems can use these intents for retrieval, clustering, or handoff logic.\n\n\ud83e\uddea 5. Compliance Criteria\nTo be SPID-compliant, a system must:\nServe or retrieve packets matching the Smart Packet Format\n\n\nAccept SPID PulseID queries via API or registry\n\n\nRespect routing logic based on intent and packet metadata\n\n\nSupport voice + transcript pairing\n\n\nLimit CTAs to defined schema types\n\n\n\n\ud83d\uddfa\ufe0f Future Extensions\nPlanned extensions include:\n\ud83d\udd04 Cross-agent packet routing\n\n\n\ud83d\udce1 Distributed registry models (using DNS or DHT)\n\n\n\ud83c\udf99\ufe0f Live voice-to-Smart Packet encoding\n\n\n\ud83d\udd11 Permissioned inboxes and async threads\n\n\n\ud83e\udde9 Schema.org and JSON-LD integration for semantic indexing\n\n\n\nThe SPID Protocol turns knowledge into a retrievable, trusted, voice-first layer of the web \u2014 optimized for AI, but owned by people.\n\n---\n'})})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);